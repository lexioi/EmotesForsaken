-- === –ù–ê–°–¢–†–û–ô–ö–ê –ö–õ–Æ–ß–ê ===
local validKey = "DOdScrIpt"
local linkToCopy = "https://discord.gg/aGk2GdYyRg" -- –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É

-- === –°–û–ó–î–ê–ù–ò–ï GUI –î–õ–Ø –ö–õ–Æ–ß–ê ===
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local keyGui = Instance.new("ScreenGui")
keyGui.Name = "KeySystemGui"
keyGui.ResetOnSpawn = false
keyGui.Parent = playerGui

local keyFrame = Instance.new("Frame")
keyFrame.Size = UDim2.new(0, 300, 0, 200)
keyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
keyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
keyFrame.BackgroundTransparency = 0.5 -- –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å 0.4-0.6
keyFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
keyFrame.Parent = keyGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 50)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Key System"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.Parent = keyFrame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.8, 0, 0, 40)
textBox.Position = UDim2.new(0.1, 0, 0.35, 0)
textBox.PlaceholderText = "Enter your key..."
textBox.Text = ""
textBox.TextScaled = true
textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
textBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.Parent = keyFrame

local copyButton = Instance.new("TextButton")
copyButton.Size = UDim2.new(0.45, -5, 0, 40)
copyButton.Position = UDim2.new(0.05, 0, 0.65, 0)
copyButton.Text = "Copy Link"
copyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
copyButton.Font = Enum.Font.SourceSansBold
copyButton.TextSize = 18
copyButton.Parent = keyFrame

local submitButton = Instance.new("TextButton")
submitButton.Size = UDim2.new(0.45, -5, 0, 40)
submitButton.Position = UDim2.new(0.5, 5, 0.65, 0)
submitButton.Text = "Submit Key"
submitButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
submitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
submitButton.Font = Enum.Font.SourceSansBold
submitButton.TextSize = 18
submitButton.Parent = keyFrame

-- –¢–µ–∫—Å—Ç "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!" –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π Copy Link (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç)
local copiedLabel = Instance.new("TextLabel")
copiedLabel.Size = UDim2.new(0.45, -5, 0, 20)
copiedLabel.Position = UDim2.new(0.05, 0, 0.75, 0)
copiedLabel.BackgroundTransparency = 1
copiedLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
copiedLabel.Font = Enum.Font.SourceSansBold
copiedLabel.TextSize = 16
copiedLabel.Text = ""
copiedLabel.TextTransparency = 1 -- –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç
copiedLabel.Parent = keyFrame

-- === –§–£–ù–ö–¶–ò–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –°–°–´–õ–ö–ò ===
copyButton.Activated:Connect(function()
	setclipboard(linkToCopy)
	
	-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!" –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã
	copiedLabel.Text = "Copied!"
	copiedLabel.TextTransparency = 0
	wait(2)
	copiedLabel.TextTransparency = 1
end)

-- === –í–°–¢–ê–í–¨ –°–Æ–î–ê –ö–û–î scriptl.txt ===
local lexioiScript = [[
-- –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local player = Players.LocalPlayer
local character= player.Character
local humanoid
local originalJumpPower = 50

-- <<< –ù–ê–ß–ê–õ–û: –ù–û–í–´–ï –ü–£–¢–ò –î–õ–Ø –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ì–û –ü–û–ò–°–ö–ê >>>
local charactersFolder = ReplicatedStorage:WaitForChild("Characters")
local killerCharactersFolder = charactersFolder and charactersFolder:FindFirstChild("Killer")
local survivorCharactersFolder = charactersFolder and charactersFolder:FindFirstChild("Survivor")
-- <<< –ö–û–ù–ï–¶: –ù–û–í–´–ï –ü–£–¢–ò –î–õ–Ø –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ì–û –ü–û–ò–°–ö–ê >>>


-- <<< –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–ù–ò–ú–ê–¶–ò–Ø–ú–ò –î–í–ò–ñ–ï–ù–ò–Ø >>>
local movementAnimConnection= nil
local activeMovementAnims= nil -- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: Run -> Sprint
local currentMovementAnimTrack= nil
local isAutoAnimsEnabled = true
-- <<< –ù–û–í–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø –ê–í–¢–û-–ê–ù–ò–ú–ê–¶–ò–ô –í–´–ñ–ò–í–®–ò–• >>>
local isSurvivorAutoAnimsEnabled = false
local isSurvivorHurtAnimsEnabled = false


--[[
	 <<< –£–î–ê–õ–ï–ù–û >>>
	 –ë–æ–ª—å—à–∏–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã allKillerAnimations, allKillerSkinAnimations –∏ allSurvivorAnimations
	 –±—ã–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω—ã. –î–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.
]]

-- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è GUI)
local categoryData = {
    ["Killer Animations"] = {
        dataSource = {}, -- –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        subCategories = {},
        buttons = {},
        scrollingFrame = nil,
        uiListLayout = nil,
        buttonNameCache = {},
        currentSubCategoryFrame = nil,
        currentSubCategoryLayout = nil,
    },
    ["Killer-Skins Anim"] = {
        dataSource = {}, -- –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        subCategories = {},
        skinSubCategories = {},
        buttons = {},
        scrollingFrame = nil,
        uiListLayout = nil,
        buttonNameCache = {},
        currentSubCategoryFrame = nil,
        currentSubCategoryLayout = nil,
        currentSkinFrame = nil,
        currentSkinLayout = nil,
    },
    ["Survivors Animations"] = {
        dataSource = {}, -- –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        subCategories = {},
        buttons = {},
        scrollingFrame = nil,
        uiListLayout = nil,
        buttonNameCache = {},
        currentSubCategoryFrame = nil,
        currentSubCategoryLayout = nil,
    },
}

-- GUI Creation (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EmoteGui"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

local openButton = Instance.new("TextButton")
openButton.Name = "OpenButton"
openButton.Parent = screenGui
openButton.Size = UDim2.new(0, 150, 0, 50)
openButton.Position = UDim2.new(0.5, -75, 0.8, 0)
openButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
openButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
openButton.TextColor3 = Color3.fromRGB(255, 255, 255)
openButton.Text = "Open Menu"
openButton.Font = Enum.Font.SourceSansBold
openButton.TextSize = 20
openButton.Active = true
openButton.Draggable = true

local mainFrame = Instance.new("Frame")
mainFrame.Name = "EmoteMenu"
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 500, 0, 450)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -225)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BackgroundTransparency = 0.6
mainFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
mainFrame.Visible = false
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.ClipsDescendants = true

local categoryButtonsFrame = Instance.new("Frame")
categoryButtonsFrame.Name = "CategoryButtons"
categoryButtonsFrame.Parent = mainFrame
categoryButtonsFrame.Size = UDim2.new(1, 0, 0, 40)
categoryButtonsFrame.Position = UDim2.new(0, 0, 0, 0)
categoryButtonsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
categoryButtonsFrame.BorderSizePixel = 0

local uiListLayoutCategories = Instance.new("UIListLayout")
uiListLayoutCategories.Parent = categoryButtonsFrame
uiListLayoutCategories.FillDirection = Enum.FillDirection.Horizontal
uiListLayoutCategories.HorizontalAlignment = Enum.HorizontalAlignment.Center
uiListLayoutCategories.VerticalAlignment = Enum.VerticalAlignment.Center
uiListLayoutCategories.Padding = UDim.new(0, 5)
uiListLayoutCategories.SortOrder = Enum.SortOrder.LayoutOrder

local searchButton = Instance.new("TextButton")
searchButton.Name = "SearchButton"
searchButton.Parent = mainFrame
searchButton.Size = UDim2.new(0, 30, 0, 30)
searchButton.Position = UDim2.new(1, -35, 0, 45)
searchButton.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
searchButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
searchButton.TextColor3 = Color3.fromRGB(255, 255, 255)
searchButton.Text = "üîç"
searchButton.Font = Enum.Font.SourceSansBold
searchButton.TextSize = 20
searchButton.ZIndex = 2

local searchTextBox = Instance.new("TextBox")
searchTextBox.Name = "SearchTextBox"
searchTextBox.Parent = mainFrame
searchTextBox.Size = UDim2.new(1, -40, 0, 30)
searchTextBox.Position = UDim2.new(0, 5, 0, 85)
searchTextBox.PlaceholderText = "Search in the current category..."
searchTextBox.TextScaled = true
searchTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
searchTextBox.BorderColor3 = Color3.fromRGB(255, 255, 255)
searchTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchTextBox.Visible = false
searchTextBox.ClearTextOnFocus = false
searchTextBox.ZIndex = 2

local resizeButton = Instance.new("TextButton")
resizeButton.Name = "ResizeButton"
resizeButton.Parent = mainFrame
resizeButton.Size = UDim2.new(0, 20, 0, 20)
resizeButton.Position = UDim2.new(1, -20, 1, -20)
resizeButton.AnchorPoint = Vector2.new(1, 1)
resizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
resizeButton.BackgroundTransparency = 0.7
resizeButton.BorderSizePixel = 0
resizeButton.Text = ""
resizeButton.ZIndex = 10

-- –õ–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
local isResizing = false
local resizeConnection
resizeButton.MouseButton1Down:Connect(function()
    isResizing = true
    local startMousePos = UserInputService:GetMouseLocation()
    local startFrameSize = mainFrame.AbsoluteSize

    if resizeConnection then resizeConnection:Disconnect() end

    resizeConnection = UserInputService.InputChanged:Connect(function(input)
        if not isResizing then return end
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            local currentMousePos = UserInputService:GetMouseLocation()
            local delta = currentMousePos - startMousePos
            local newSize = startFrameSize + delta
            local minWidth = 300
            local minHeight = 250
            mainFrame.Size = UDim2.new(0, math.max(newSize.X, minWidth), 0, math.max(newSize.Y, minHeight))
        end
    end)
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if isResizing then
            isResizing = false
            if resizeConnection then
                resizeConnection:Disconnect()
                resizeConnection = nil
            end
        end
    end
end)


--- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

local function stopMovementAnimationOverride()if movementAnimConnection then
        movementAnimConnection:Disconnect()
        movementAnimConnection = nil
    end
    if currentMovementAnimTrack then
        currentMovementAnimTrack:Stop()
        currentMovementAnimTrack:Destroy()
        currentMovementAnimTrack = nil
    end
    activeMovementAnims = nil
end

local function startMovementAnimationOverride(animSet)stopMovementAnimationOverride()

    -- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Sprint –≤–º–µ—Å—Ç–æ Run
    if not animSet or not animSet.Idle or not animSet.Walk or not animSet.Sprint then
        warn("DEBUG: –£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π Idle, Walk –∏ Sprint.")
        return
    end

	-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–∏–ª–ª–µ—Ä–æ–≤
    if currentCategory == "Killer Animations" or currentCategory == "Killer-Skins Anim" then
		if not isAutoAnimsEnabled then return end
	-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤—ã–∂–∏–≤—à–∏—Ö
	elseif currentCategory == "Survivors Animations" then
		if not isSurvivorAutoAnimsEnabled and not isSurvivorHurtAnimsEnabled then return end
	end

    activeMovementAnims = {}
	if currentCategory == "Survivors Animations" and isSurvivorHurtAnimsEnabled then
		-- –î–ª—è –≤—ã–∂–∏–≤—à–∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º Hurt-–∞–Ω–∏–º–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –≤–∫–ª—é—á–µ–Ω—ã –∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
		activeMovementAnims.Idle = animSet.HurtIdle or animSet.Idle
		activeMovementAnims.Walk = animSet.HurtWalk or animSet.Walk
		-- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: HurtRun -> HurtSprint (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π) –∏ Run -> Sprint
		activeMovementAnims.Sprint = animSet.HurtSprint or animSet.Sprint
	else
		-- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∫–∏–ª–ª–µ—Ä–æ–≤ –∏ –æ–±—ã—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –≤—ã–∂–∏–≤—à–∏—Ö
		activeMovementAnims.Idle = animSet.Idle
		activeMovementAnims.Walk = animSet.Walk
		-- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: Run -> Sprint
		activeMovementAnims.Sprint = animSet.Sprint
	end

    movementAnimConnection = RunService.RenderStepped:Connect(function()
        if not humanoid or not activeMovementAnims or not mainFrame.Visible then
            stopMovementAnimationOverride()
            return
        end

        local isMoving = humanoid.MoveDirection.Magnitude > 0
        local targetAnimId= nil

        if not isMoving then
            targetAnimId = activeMovementAnims.Idle
        else
            if humanoid.WalkSpeed >= 23 then -- –ü–æ—Ä–æ–≥ —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–ª—è —Å–ø—Ä–∏–Ω—Ç–∞
                targetAnimId = activeMovementAnims.Sprint
            else
                targetAnimId = activeMovementAnims.Walk
            end
        end

        if targetAnimId then
            if currentMovementAnimTrack and currentMovementAnimTrack.Animation and currentMovementAnimTrack.Animation.AnimationId == targetAnimId then
                return
            end

            if currentMovementAnimTrack then
                currentMovementAnimTrack:Stop()
				currentMovementAnimTrack:Destroy()
            end

            local animation = Instance.new("Animation")
            animation.AnimationId = targetAnimId
            currentMovementAnimTrack = humanoid:LoadAnimation(animation)
            currentMovementAnimTrack:Play()
        end
    end)
end


local activeEmotes= {}

local function stopEmoteForHumanoid(targetHumanoid)local emoteData = activeEmotes[targetHumanoid]
	if emoteData and emoteData.animationTrack then
		emoteData.animationTrack:Stop()
		emoteData.animationTrack:Destroy()
	end
	activeEmotes[targetHumanoid] = nil
end

local function stopAllEmotes()if humanoid then
		stopEmoteForHumanoid(humanoid)
	end
	activeEmotes = {}
end

local function playLocalAnimation(targetHumanoid: string)stopEmoteForHumanoid(targetHumanoid)

    if type(animationId) ~= "string" or not string.find(animationId, "rbxassetid") then
		warn("DEBUG: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π animationId:", tostring(animationId))
		return
	end

    local animation = Instance.new("Animation")
    animation.AnimationId = animationId
    local animationTrack = targetHumanoid:LoadAnimation(animation)
    animationTrack:Play()

    activeEmotes[targetHumanoid] = {animationTrack = animationTrack}

	animationTrack.Stopped:Connect(function()
		task.wait()
		if activeEmotes[targetHumanoid] and activeEmotes[targetHumanoid].animationTrack == animationTrack then
			stopEmoteForHumanoid(targetHumanoid)
		end
		animation:Destroy()
	end)
end

local function updateCanvasSize(targetFrame: UIListLayout)if not targetFrame or not targetLayout then return end
    task.wait(0.1)
    local contentSize = targetLayout.AbsoluteContentSize
    targetFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 10)
end

-- –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
local function filterButtons(searchText)local lowerSearchText = searchText:lower()
    local targetButtons = nil
    local targetScrollingFrame = nil
    local targetUIListLayout = nil

	local animData = categoryData[currentCategory]

    if currentCategory == "Killer Animations" or currentCategory == "Survivors Animations" then
        if currentSubCategory then
            targetButtons = animData.subCategories[currentSubCategory].buttons
            targetScrollingFrame = animData.currentSubCategoryFrame
            targetUIListLayout = animData.currentSubCategoryLayout
        else
            targetButtons = animData.buttons
            targetScrollingFrame = animData.scrollingFrame
            targetUIListLayout = animData.uiListLayout
        end
	elseif currentCategory == "Killer-Skins Anim" then
		if currentSkinName then
			targetButtons = animData.skinSubCategories[currentSubCategory][currentSkinName].buttons
			targetScrollingFrame = animData.currentSkinFrame
			targetUIListLayout = animData.currentSkinLayout
		elseif currentSubCategory then
			targetButtons = animData.subCategories[currentSubCategory].buttons
			targetScrollingFrame = animData.currentSubCategoryFrame
			targetUIListLayout = animData.currentSubCategoryLayout
		else
			targetButtons = animData.buttons
			targetScrollingFrame = animData.scrollingFrame
			targetUIListLayout = animData.uiListLayout
		end
    end

    if not targetButtons then return end

    for _, button in pairs(targetButtons) do
        local buttonText = button.Text:lower()
        if string.find(buttonText, lowerSearchText) then
            button.Visible = true
        else
            button.Visible = false
        end
    end

    if targetScrollingFrame and targetUIListLayout then
        updateCanvasSize(targetScrollingFrame, targetUIListLayout)
    end
end

-- <<< –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ö–ù–û–ü–ö–ò AutoAnims –¥–ª—è –£–±–∏–π—Ü >>>
local function createKillerAutoAnimsButton(parentFrame: table)local autoAnimsButton = Instance.new("TextButton")
    autoAnimsButton.Name = "AutoAnimsButton"
    autoAnimsButton.Parent = parentFrame
    autoAnimsButton.Size = UDim2.new(1, -10, 0, 40)
    autoAnimsButton.BackgroundColor3 = Color3.fromRGB(40, 80, 120)
    autoAnimsButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    autoAnimsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    autoAnimsButton.Text = "AutoAnims (" .. (isAutoAnimsEnabled and "On" or "Off") .. ")"
    autoAnimsButton.Font = Enum.Font.SourceSansBold
    autoAnimsButton.TextSize = 18
    autoAnimsButton.LayoutOrder = -100 -- –í—Å–µ–≥–¥–∞ –Ω–∞–≤–µ—Ä—Ö—É

    autoAnimsButton.MouseButton1Click:Connect(function()
        isAutoAnimsEnabled = not isAutoAnimsEnabled
        autoAnimsButton.Text = "AutoAnims (" .. (isAutoAnimsEnabled and "On" or "Off") .. ")"
        if isAutoAnimsEnabled then
            startMovementAnimationOverride(animSet)
        else
            stopMovementAnimationOverride()
        end
    end)
	return autoAnimsButton
end

-- <<< –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ö–ù–û–ü–û–ö AutoAnims –¥–ª—è –í—ã–∂–∏–≤—à–∏—Ö >>>
local function createSurvivorAutoAnimsButtons(parentFrame: table)local buttonsContainer = {}
	
    local autoAnimsButton = Instance.new("TextButton")
    autoAnimsButton.Name = "AutoAnimsButton"
    autoAnimsButton.Parent = parentFrame
    autoAnimsButton.Size = UDim2.new(0.5, -7, 0, 40) -- –ü–æ–ª–æ–≤–∏–Ω–∞ —à–∏—Ä–∏–Ω—ã
    autoAnimsButton.BackgroundColor3 = Color3.fromRGB(40, 80, 120)
    autoAnimsButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    autoAnimsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    autoAnimsButton.Text = "AutoAnims (Off)"
    autoAnimsButton.Font = Enum.Font.SourceSansBold
    autoAnimsButton.TextSize = 16
    autoAnimsButton.LayoutOrder = -100

	local autoHurtAnimsButton = Instance.new("TextButton")
    autoHurtAnimsButton.Name = "AutoHurtAnimsButton"
    autoHurtAnimsButton.Parent = parentFrame
    autoHurtAnimsButton.Size = UDim2.new(0.5, -8, 0, 40) -- –ü–æ–ª–æ–≤–∏–Ω–∞ —à–∏—Ä–∏–Ω—ã
	autoHurtAnimsButton.Position = UDim2.new(0.5, -2, 0, 0)
    autoHurtAnimsButton.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
    autoHurtAnimsButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
    autoHurtAnimsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    autoHurtAnimsButton.Text = "AutoHurtAnims (Off)"
    autoHurtAnimsButton.Font = Enum.Font.SourceSansBold
    autoHurtAnimsButton.TextSize = 16
    autoHurtAnimsButton.LayoutOrder = -99

    autoAnimsButton.MouseButton1Click:Connect(function()
        isSurvivorAutoAnimsEnabled = not isSurvivorAutoAnimsEnabled
		if isSurvivorAutoAnimsEnabled then
			isSurvivorHurtAnimsEnabled = false -- –í–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–µ–Ω–∏–µ
		end
		
        autoAnimsButton.Text = "AutoAnims (" .. (isSurvivorAutoAnimsEnabled and "On" or "Off") .. ")"
		autoHurtAnimsButton.Text = "AutoHurtAnims (Off)"

        if isSurvivorAutoAnimsEnabled then
            startMovementAnimationOverride(animSet)
        else
            stopMovementAnimationOverride()
        end
    end)
	
	autoHurtAnimsButton.MouseButton1Click:Connect(function()
        isSurvivorHurtAnimsEnabled = not isSurvivorHurtAnimsEnabled
		if isSurvivorHurtAnimsEnabled then
			isSurvivorAutoAnimsEnabled = false -- –í–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–µ–Ω–∏–µ
		end
		
        autoHurtAnimsButton.Text = "AutoHurtAnims (" .. (isSurvivorHurtAnimsEnabled and "On" or "Off") .. ")"
		autoAnimsButton.Text = "AutoAnims (Off)"
		
        if isSurvivorHurtAnimsEnabled then
            startMovementAnimationOverride(animSet)
        else
            stopMovementAnimationOverride()
        end
    end)

	table.insert(buttonsContainer, autoAnimsButton)
	table.insert(buttonsContainer, autoHurtAnimsButton)
	return buttonsContainer
end


-- –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∞–Ω–∏–º–∞—Ü–∏–π
local function createAnimationButtons(parentFrame, animationTable, buttonListTable)for animName, animId in pairs(animationTable) do
        local shouldSkip = false
        -- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "Sprint"
        if animName == "Idle" or animName == "Walk" or animName == "Sprint" or
           animName == "HurtIdle" or animName == "HurtWalk" or animName == "HurtSprint" then
            shouldSkip = true
        end
		
        if not shouldSkip then
			local button = Instance.new("TextButton")
			button.Name = animName .. "Button"
			button.Parent = parentFrame
			button.Size = UDim2.new(1, -10, 0, 40)
			button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			button.BorderColor3 = Color3.fromRGB(255, 255, 255)
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.Text = animName
			button.Font = Enum.Font.SourceSansBold
			button.TextSize = 18

			button.MouseButton1Click:Connect(function()
				if humanoid and character then
					playLocalAnimation(humanoid, animId)
				else
					warn("DEBUG: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏—é, –≥—É–º–∞–Ω–æ–∏–¥ –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ —Ä–∞–≤–µ–Ω nil.")
				end
			end)
			table.insert(buttonListTable, button)
		end
    end
end

-- =================================================================
--                       BACK BUTTON LOGIC (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
-- =================================================================
local backFunctionStack = {}
local backButton

local function clearBackStack()for i = 1, #backFunctionStack do
		backFunctionStack[i] = nil
	end
	backButton.Visible = false
end

local function pushBackFunction(func)table.insert(backFunctionStack, func)
	backButton.Visible = true
end

local function executeBackFunction()if #backFunctionStack > 0 then
		local func = table.remove(backFunctionStack)
		if func then
			func()
		end
	end
	if #backFunctionStack == 0 then
		backButton.Visible = false
	end
end
-- =================================================================


-- <<< –ù–ê–ß–ê–õ–û: –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø REPLICATED STORAGE >>>

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –∏–∑ –ø–∞–ø–∫–∏
local function extractAnimationsFromFolder(folder)
    local anims = {}
    if not folder then return anims end
    for _, item in ipairs(folder:GetChildren()) do
        -- –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –∞–Ω–∏–º–∞—Ü–∏—è, –∞ –Ω–µ –ø–∞–ø–∫–∞ (–∫–∞–∫ Abilities)
        if item:IsA("Animation") and item.AnimationId and item.AnimationId ~= "" then
            anims[item.Name] = item.AnimationId
        end
    end
    return anims
end

-- –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —É–±–∏–π—Ü –∏ –∏—Ö —Å–∫–∏–Ω–æ–≤
local function discoverAllKillerData()local allData = {
        Killers = {},
        Skins = {}
    }
    if not killerCharactersFolder then
        warn("–ü–∞–ø–∫–∞ ReplicatedStorage.Characters.Killer –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return allData
    end

    for _, killerFolder in ipairs(killerCharactersFolder:GetChildren()) do
        if killerFolder:IsA("Model") or killerFolder:IsA("Folder") then
            local killerName = killerFolder.Name
            allData.Skins[killerName] = {}

            -- 1. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ (Default)
            local defaultFolder = killerFolder:FindFirstChild("Default")
            local defaultAnimsFolder = defaultFolder and defaultFolder:FindFirstChild("Animations")
            local defaultAnims = extractAnimationsFromFolder(defaultAnimsFolder)
            allData.Killers[killerName] = defaultAnims

            -- 2. –ò—â–µ–º —Å–∫–∏–Ω—ã –∏ –∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            for _, skinFolder in ipairs(killerFolder:GetChildren()) do
                if (skinFolder:IsA("Model") or skinFolder:IsA("Folder")) and skinFolder.Name ~= "Default" then
                    local skinName = skinFolder.Name
                    local skinAnimsFolder = skinFolder:FindFirstChild("Animations")
                    local skinAnims = extractAnimationsFromFolder(skinAnimsFolder)
                    
                    -- --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 2: –ù–ê–ß–ê–õ–û –ù–û–í–û–ô –õ–û–ì–ò–ö–ò –î–õ–Ø –°–ö–ò–ù–û–í ---
                    local finalSkinAnims = {}
                    -- –°–Ω–∞—á–∞–ª–∞ –∫–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
                    for animName, animId in pairs(defaultAnims) do
                        finalSkinAnims[animName] = animId
                    end

                    local hasUnique = false
                    -- –ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ö –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ —Å–∫–∏–Ω–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                    for animName, skinAnimId in pairs(skinAnims) do
                        -- –ï—Å–ª–∏ —É —Å–∫–∏–Ω–∞ –µ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ Default, –∏–ª–∏ –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, —Å—á–∏—Ç–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–π
                        if defaultAnims[animName] ~= skinAnimId then
                            hasUnique = true
                        end
                        finalSkinAnims[animName] = skinAnimId -- –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
                    end
                    
                    -- –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–Ω –≤ —Å–ø–∏—Å–æ–∫, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
                    if hasUnique then
                        allData.Skins[killerName][skinName] = finalSkinAnims
                    end
                    -- --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 2: –ö–û–ù–ï–¶ –ù–û–í–û–ô –õ–û–ì–ò–ö–ò ---
                end
            end
        end
    end
    return allData
end

-- –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∂–∏–≤—à–∏—Ö
local function discoverAllSurvivorData()local allData = {}
    if not survivorCharactersFolder then
        warn("–ü–∞–ø–∫–∞ ReplicatedStorage.Characters.Survivor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return allData
    end

    local civilianFolder = survivorCharactersFolder:FindFirstChild("Civilian")
    if civilianFolder then
        local animsFolder = civilianFolder:FindFirstChild("Animations")
        if animsFolder then
            -- --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 3: –†–ê–ó–î–ï–õ–ï–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ô –í–´–ñ–ò–í–®–ò–• ---
            -- –ë–µ—Ä—ë–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–ø–∫–∏ Animations
            local movementAnims = extractAnimationsFromFolder(animsFolder)
            
            -- –ò—â–µ–º –ø–∞–ø–∫—É Abilities –∏ –±–µ—Ä—ë–º –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç—Ç—É–¥–∞
            local abilitiesFolder = animsFolder:FindFirstChild("Abilities")
            local abilityAnims = extractAnimationsFromFolder(abilitiesFolder)

            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
            allData["Civilian"] = {
                Movement = movementAnims,
                Abilities = abilityAnims
            }
        end
    end
    return allData
end

-- <<< –ö–û–ù–ï–¶: –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø >>>

-- <<< –ì–õ–û–ë–ê–õ–¨–ù–û –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø >>>
-- –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
local function createCategoryButtons(categoryName)local currentCategoryData = categoryData[categoryName]
    if not currentCategoryData then return end

    -- –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–Ω–æ–ø–æ–∫
    for _, button in pairs(currentCategoryData.buttons) do button:Destroy() end
    currentCategoryData.buttons = {}
    currentCategoryData.subCategories = {}

    if categoryName == "Killer Animations" then
        local dataSource = currentCategoryData.dataSource
        for characterName, characterAnims in pairs(dataSource) do
            currentCategoryData.subCategories[characterName] = { data = characterAnims, buttons = {} }

            local subCategoryButton = Instance.new("TextButton", currentCategoryData.scrollingFrame)
            subCategoryButton.Name = characterName .. "SubCategoryButton"
            subCategoryButton.Size = UDim2.new(1, -10, 0, 40)
            subCategoryButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            subCategoryButton.Text = characterName
            subCategoryButton.Font = Enum.Font.SourceSansBold
            subCategoryButton.TextSize = 18
			subCategoryButton.TextColor3 = Color3.new(1,1,1)

            currentCategoryData.buttons[characterName] = subCategoryButton

            subCategoryButton.MouseButton1Click:Connect(function()
                currentCategoryData.scrollingFrame.Visible = false
                currentSubCategory = characterName
				startMovementAnimationOverride(characterAnims)
				
                local subCatFrame = currentCategoryData.subCategories[characterName].scrollingFrame
                if not subCatFrame then
                    subCatFrame = Instance.new("ScrollingFrame", mainFrame)
                    subCatFrame.Name = characterName .. "AnimationsContainer"
                    subCatFrame.Size = UDim2.new(1, 0, 1, -80)
                    subCatFrame.Position = UDim2.new(0, 0, 0, 80)
                    subCatFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
					
                    local subCatLayout = Instance.new("UIListLayout", subCatFrame)
                    subCatLayout.Padding = UDim.new(0, 5)

                    currentCategoryData.subCategories[characterName].scrollingFrame = subCatFrame
                    currentCategoryData.subCategories[characterName].uiListLayout = subCatLayout

					local autoAnimsBtn = createKillerAutoAnimsButton(subCatFrame, characterAnims)
					table.insert(currentCategoryData.subCategories[characterName].buttons, autoAnimsBtn)
					
					createAnimationButtons(subCatFrame, characterAnims, currentCategoryData.subCategories[characterName].buttons)
                end

                subCatFrame.Visible = true
                currentCategoryData.currentSubCategoryFrame = subCatFrame
                currentCategoryData.currentSubCategoryLayout = subCatFrame:FindFirstChildOfClass("UIListLayout")
                updateCanvasSize(subCatFrame, currentCategoryData.currentSubCategoryLayout)
                
				pushBackFunction(function()
					stopMovementAnimationOverride()
					subCatFrame.Visible = false
					currentCategoryData.scrollingFrame.Visible = true
					currentSubCategory = nil
					currentCategoryData.currentSubCategoryFrame = nil
				end)
            end)
        end
        updateCanvasSize(currentCategoryData.scrollingFrame, currentCategoryData.uiListLayout)

    elseif categoryName == "Killer-Skins Anim" then
        local dataSource = currentCategoryData.dataSource
        for killerName, killerSkinsData in pairs(dataSource) do
            -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∫–∏–ª–ª–µ—Ä–∞, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –Ω–µ—Ç —Å–∫–∏–Ω–æ–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
            if next(killerSkinsData) == nil then
            -- –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Ç–µ—Ä–∞—Ü–∏—é
        else
            -- original code continues here
        end

            currentCategoryData.subCategories[killerName] = { buttons = {} }

            local killerButton = Instance.new("TextButton", currentCategoryData.scrollingFrame)
            killerButton.Name = killerName .. "KillerButton"
            killerButton.Size = UDim2.new(1, -10, 0, 40)
            killerButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            killerButton.Text = killerName
            killerButton.Font = Enum.Font.SourceSansBold
			killerButton.TextSize = 18
			killerButton.TextColor3 = Color3.new(1,1,1)
            currentCategoryData.buttons[killerName] = killerButton

            killerButton.MouseButton1Click:Connect(function()
                currentCategoryData.scrollingFrame.Visible = false
                currentSubCategory = killerName

                local killerFrame = currentCategoryData.subCategories[killerName].scrollingFrame
                if not killerFrame then
                    killerFrame = Instance.new("ScrollingFrame", mainFrame)
                    killerFrame.Name = killerName .. "SkinsContainer"
                    killerFrame.Size = UDim2.new(1, 0, 1, -80)
                    killerFrame.Position = UDim2.new(0, 0, 0, 80)
					killerFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    
                    local killerLayout = Instance.new("UIListLayout", killerFrame)
                    killerLayout.Padding = UDim.new(0, 5)
                    
                    currentCategoryData.subCategories[killerName].scrollingFrame = killerFrame
                    currentCategoryData.skinSubCategories[killerName] = {}

                    for skinName, skinData in pairs(killerSkinsData) do
                        currentCategoryData.skinSubCategories[killerName][skinName] = { data = skinData, buttons = {} }
                        
                        local skinButton = Instance.new("TextButton", killerFrame)
                        skinButton.Name = skinName .. "SkinButton"
                        skinButton.Size = UDim2.new(1, -10, 0, 40)
                        skinButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                        skinButton.Text = skinName
                        skinButton.Font = Enum.Font.SourceSansBold
						skinButton.TextSize = 18
						skinButton.TextColor3 = Color3.new(1,1,1)
                        table.insert(currentCategoryData.subCategories[killerName].buttons, skinButton)

                        skinButton.MouseButton1Click:Connect(function()
                            killerFrame.Visible = false
                            currentSkinName = skinName
                            startMovementAnimationOverride(skinData)

                            local skinAnimFrame = currentCategoryData.skinSubCategories[killerName][skinName].scrollingFrame
                            if not skinAnimFrame then
                                skinAnimFrame = Instance.new("ScrollingFrame", mainFrame)
                                skinAnimFrame.Name = skinName .. "AnimsContainer"
                                skinAnimFrame.Size = UDim2.new(1, 0, 1, -80)
                                skinAnimFrame.Position = UDim2.new(0, 0, 0, 80)
								skinAnimFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

                                local skinAnimLayout = Instance.new("UIListLayout", skinAnimFrame)
                                skinAnimLayout.Padding = UDim.new(0, 5)

                                currentCategoryData.skinSubCategories[killerName][skinName].scrollingFrame = skinAnimFrame

                                local autoAnimsBtn = createKillerAutoAnimsButton(skinAnimFrame, skinData)
                                table.insert(currentCategoryData.skinSubCategories[killerName][skinName].buttons, autoAnimsBtn)
                                
                                createAnimationButtons(skinAnimFrame, skinData, currentCategoryData.skinSubCategories[killerName][skinName].buttons)
                            end
                            
                            skinAnimFrame.Visible = true
                            currentCategoryData.currentSkinFrame = skinAnimFrame
                            updateCanvasSize(skinAnimFrame, skinAnimFrame:FindFirstChildOfClass("UIListLayout"))
                            
							pushBackFunction(function()
                                stopMovementAnimationOverride()
                                skinAnimFrame.Visible = false
                                killerFrame.Visible = true
                                currentSkinName = nil
                                currentCategoryData.currentSkinFrame = nil
                            end)
                        end)
                    end
                end

                killerFrame.Visible = true
                currentCategoryData.currentSubCategoryFrame = killerFrame
                updateCanvasSize(killerFrame, killerFrame:FindFirstChildOfClass("UIListLayout"))
                
                pushBackFunction(funct
	end
ion()
                    killerFrame.Visible = false
                    currentCategoryData.scrollingFrame.Visible = true
                    currentSubCategory = nil
                    currentCategoryData.currentSubCategoryFrame = nil
                end)
            end)
        end
        updateCanvasSize(currentCategoryData.scrollingFrame, currentCategoryData.uiListLayout)
		
	-- --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 3: –ü–û–õ–ù–û–°–¢–¨–Æ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –í–´–ñ–ò–í–®–ò–• ---
	elseif categoryName == "Survivors Animations" then
		local dataSource = currentCategoryData.dataSource
		for characterName, characterData in pairs(dataSource) do
			-- characterData —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç .Movement –∏ .Abilities
			currentCategoryData.subCategories[characterName] = { data = characterData, buttons = {} }

			local subCategoryButton = Instance.new("TextButton", currentCategoryData.scrollingFrame)
			subCategoryButton.Name = characterName .. "SubCategoryButton"
			subCategoryButton.Size = UDim2.new(1, -10, 0, 40)
			subCategoryButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
			subCategoryButton.Text = characterName
			subCategoryButton.Font = Enum.Font.SourceSansBold
			subCategoryButton.TextSize = 18
			subCategoryButton.TextColor3 = Color3.new(1,1,1)

			currentCategoryData.buttons[characterName] = subCategoryButton

			subCategoryButton.MouseButton1Click:Connect(function()
				currentCategoryData.scrollingFrame.Visible = false
				currentSubCategory = characterName
				-- –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞–µ–º –∏–∑ .Movement
				startMovementAnimationOverride(characterData.Movement)

				local subCatFrame = currentCategoryData.subCategories[characterName].scrollingFrame
				if not subCatFrame then
					subCatFrame = Instance.new("ScrollingFrame", mainFrame)
					subCatFrame.Name = characterName .. "AnimationsContainer"
					subCatFrame.Size = UDim2.new(1, 0, 1, -80)
					subCatFrame.Position = UDim2.new(0, 0, 0, 80)
					subCatFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

					local subCatLayout = Instance.new("UIListLayout", subCatFrame)
					subCatLayout.Padding = UDim.new(0, 5)

					currentCategoryData.subCategories[characterName].scrollingFrame = subCatFrame
					currentCategoryData.subCategories[characterName].uiListLayout = subCatLayout
					
					-- –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ-–∞–Ω–∏–º–∞—Ü–∏–π (–∏—Å–ø–æ–ª—å–∑—É—é—Ç .Movement)
					local autoAnimButtons = createSurvivorAutoAnimsButtons(subCatFrame, characterData.Movement)
					for _, btn in ipairs(autoAnimButtons) do
						table.insert(currentCategoryData.subCategories[characterName].buttons, btn)
					end
					
					-- –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
					if next(characterData.Abilities) then
						local abilitiesButton = Instance.new("TextButton")
						abilitiesButton.Name = "AbilitiesButton"
						abilitiesButton.Parent = subCatFrame
						abilitiesButton.Size = UDim2.new(1, -10, 0, 40)
						abilitiesButton.BackgroundColor3 = Color3.fromRGB(90, 60, 130) -- –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
						abilitiesButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
						abilitiesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
						abilitiesButton.Text = "Abilities"
						abilitiesButton.Font = Enum.Font.SourceSansBold
						abilitiesButton.TextSize = 18
						abilitiesButton.LayoutOrder = -50
						table.insert(currentCategoryData.subCategories[characterName].buttons, abilitiesButton)
						
						abilitiesButton.MouseButton1Click:Connect(function()
							subCatFrame.Visible = false
							
							local abilitiesFrame = currentCategoryData.subCategories[characterName].abilitiesFrame
							if not abilitiesFrame then
								abilitiesFrame = Instance.new("ScrollingFrame", mainFrame)
								abilitiesFrame.Name = "AbilitiesContainer"
								abilitiesFrame.Size = UDim2.new(1, 0, 1, -80)
								abilitiesFrame.Position = UDim2.new(0, 0, 0, 80)
								abilitiesFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
								
								local abilitiesLayout = Instance.new("UIListLayout", abilitiesFrame)
								abilitiesLayout.Padding = UDim.new(0, 5)
								
								currentCategoryData.subCategories[characterName].abilitiesFrame = abilitiesFrame
								
								-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ—Ä–µ–π–º –∫–Ω–æ–ø–∫–∞–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
								createAnimationButtons(abilitiesFrame, characterData.Abilities, {}) -- –ö–Ω–æ–ø–∫–∏ —Ç—É—Ç –Ω–µ –Ω–∞–¥–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
							end
							
							abilitiesFrame.Visible = true
							updateCanvasSize(abilitiesFrame, abilitiesFrame:FindFirstChildOfClass("UIListLayout"))
							
							pushBackFunction(function()
								abilitiesFrame.Visible = false
								subCatFrame.Visible = true
							end)
						end)
					end
					
					-- –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π (–∏–∑ .Movement)
					createAnimationButtons(subCatFrame, characterData.Movement, currentCategoryData.subCategories[characterName].buttons)
				end

				subCatFrame.Visible = true
				currentCategoryData.currentSubCategoryFrame = subCatFrame
				currentCategoryData.currentSubCategoryLayout = subCatFrame:FindFirstChildOfClass("UIListLayout")
				updateCanvasSize(subCatFrame, currentCategoryData.currentSubCategoryLayout)

				pushBackFunction(function()
					stopMovementAnimationOverride()
					subCatFrame.Visible = false
					currentCategoryData.scrollingFrame.Visible = true
					currentSubCategory = nil
					currentCategoryData.currentSubCategoryFrame = nil
					isSurvivorAutoAnimsEnabled = false -- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
					isSurvivorHurtAnimsEnabled = false
				end)
			end)
		end
		updateCanvasSize(currentCategoryData.scrollingFrame, currentCategoryData.uiListLayout)
	end
end


backButton = Instance.new("TextButton")
backButton.Name = "BackButton"
backButton.Parent = mainFrame
backButton.Size = UDim2.new(0, 60, 0, 30)
backButton.Position = UDim2.new(0, 5, 0, 45)
backButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
backButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
backButton.TextColor3 = Color3.fromRGB(255, 255, 255)
backButton.Text = "‚Üê Back"
backButton.Font = Enum.Font.SourceSansBold
backButton.TextSize = 14
backButton.ZIndex = 2
backButton.Visible = false
backButton.MouseButton1Click:Connect(executeBackFunction)


local function switchToCategory(newCategoryName)if currentCategory == newCategoryName and not currentSubCategory and not currentSkinName then return end
	
	stopMovementAnimationOverride()
	clearBackStack()

    local prevCategoryData = categoryData[currentCategory]
    if prevCategoryData then
        if prevCategoryData.scrollingFrame then prevCategoryData.scrollingFrame.Visible = false end
        if prevCategoryData.currentSubCategoryFrame then prevCategoryData.currentSubCategoryFrame.Visible = false end
		if prevCategoryData.currentSkinFrame then prevCategoryData.currentSkinFrame.Visible = false end
		-- –ü—Ä—è—á–µ–º —Ñ—Ä–µ–π–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω
		if prevCategoryData.subCategories then
			for _, subCat in pairs(prevCategoryData.subCategories) do
				if subCat.abilitiesFrame then subCat.abilitiesFrame.Visible = false end
			end
		end
    end
 
    currentSubCategory = nil
	currentSkinName = nil

    local newCategoryData = categoryData[newCategoryName]
    if newCategoryData and newCategoryData.scrollingFrame then
        newCategoryData.scrollingFrame.Visible = true
        currentCategory = newCategoryName
    end
end

--- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GUI –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---

for catName, catData in pairs(categoryData) do
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Name = catName .. "Container"
    scrollingFrame.Parent = mainFrame
    scrollingFrame.Size = UDim2.new(1, 0, 1, -80)
    scrollingFrame.Position = UDim2.new(0, 0, 0, 80)
    scrollingFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
    scrollingFrame.Visible = false

    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Parent = scrollingFrame
    uiListLayout.Padding = UDim.new(0, 5)

    catData.scrollingFrame = scrollingFrame
    catData.uiListLayout = uiListLayout
end

local categoryButtonNames = {"Killer Animations", "Killer-Skins Anim", "Survivors Animations"}
for i, catName in ipairs(categoryButtonNames) do
    local button = Instance.new("TextButton")
    button.Name = catName .. "Tab"
    button.Parent = categoryButtonsFrame
    button.Size = UDim2.new(1/#categoryButtonNames, -5, 1, -10)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = catName
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 16
    button.LayoutOrder = i

    button.MouseButton1Click:Connect(function()
        switchToCategory(catName)
    end)
end

local function toggleSearchBar()searchTextBox.Visible = not searchTextBox.Visible
    -- –õ–æ–≥–∏–∫–∞ —Å–¥–≤–∏–≥–∞ —Ñ—Ä–µ–π–º–æ–≤ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π
end

local function toggleMenu()mainFrame.Visible = not mainFrame.Visible
    openButton.Text = mainFrame.Visible and "Close Menu" or "Open Menu"
    if mainFrame.Visible then
        switchToCategory("Killer Animations") -- –ù–∞—á–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
    else
		stopMovementAnimationOverride()
		clearBackStack()
    end
end

openButton.MouseButton1Click:Connect(toggleMenu)
searchButton.MouseButton1Click:Connect(toggleSearchBar)
searchTextBox.Changed:Connect(function(property) if property == "Text" then filterButtons(searchTextBox.Text) end end)


local function handleCharacterSetup(newCharacter)local success, newHumanoid = pcall(function()
		return newCharacter:WaitForChild("Humanoid", 10)
	end)
	if success and newHumanoid then
		humanoid = newHumanoid
		originalJumpPower = humanoid.JumpPower or 50
		stopAllEmotes()

		humanoid.StateChanged:Connect(function(oldState, newState)
			if newState == Enum.HumanoidStateType.Jumping then
				if activeEmotes[humanoid] then
					stopEmoteForHumanoid(humanoid)
				end
			end
		end)
	else
		humanoid = nil
	end
end

player.CharacterAdded:Connect(function(char)
	character = char
	handleCharacterSetup(char)
end)

if player.Character then
	handleCharacterSetup(player.Character)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–≤–æ–¥–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if gameProcessedEvent then return end
	if input.KeyCode == Enum.KeyCode.Space then
		stopAllEmotes()
	end
end)

-- <<< –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• >>>
print("DEBUG: –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π...")

-- 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
local discoveredData = discoverAllKillerData()
categoryData["Killer Animations"].dataSource = discoveredData.Killers
categoryData["Killer-Skins Anim"].dataSource = discoveredData.Skins
categoryData["Survivors Animations"].dataSource = discoverAllSurvivorData()

-- 2. –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
createCategoryButtons("Killer Animations")
createCategoryButtons("Killer-Skins Anim")
createCategoryButtons("Survivors Animations")

-- 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≤–∏–¥–∏–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
switchToCategory("Killer Animations")

print("DEBUG: –°–∫—Ä–∏–ø—Ç —ç–º–æ—Ü–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
]]

-- === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ö–õ–Æ–ß–ê ===
submitButton.MouseButton1Click:Connect(function()
	local inputKey = textBox.Text
	if inputKey == validKey then
		keyGui:Destroy()

		local success, err = pcall(function()
			loadstring(lexioiScript)()
		end)

		if not success then
			warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ Lexioi: " .. tostring(err))
		end
	else
		textBox.Text = "Invalid key!"
	end
end)
